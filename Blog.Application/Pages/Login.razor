@page "/login"
@using Blog.Application.Contexts.AccountContext
@using Blog.Application.Contexts.ViewModels
@using System.Text.Json
@using Microsoft.AspNetCore.Components.Authorization
@inject Blazored.LocalStorage.ILocalStorageService oLocalStore
@inject NavigationManager NavManager
@inject AuthenticationStateProvider AuthStateProvider
@layout EmptyLayout

<body>
    <div class="box">
        <h2>Blog</h2>
        <input type="text" placeholder="Digite seu e-mail" class="input-field" @bind="accountViewModel.Email">
        <input type="password" placeholder="Digite sua senha" class="input-field" @bind="accountViewModel.Password">
        <div class="btn-container">
            <button type="button" class="btn btn-dark" @onclick="SubmitForm">Fazer login</button>
            <button type="button" class="btn btn-dark">Registrar-se</button>
        </div>
    </div>
</body>

@code {
    AccountViewModel accountViewModel = new();
    private async Task SubmitForm()
    {
        using var httpClient = new HttpClient();
        var url = "https://localhost:7029/v1/authenticate";

        try
        {
            var jsonRequest = JsonSerializer.Serialize(accountViewModel);
            var content = new StringContent(jsonRequest, System.Text.Encoding.UTF8, "application/json");

            var res = await httpClient.PostAsync(url, content);

            if (res.IsSuccessStatusCode)
            {
                var responseContent = await res.Content.ReadAsStringAsync();
                var jsonObject = JsonSerializer.Deserialize<JsonElement>(responseContent);
                var token = jsonObject.GetProperty("data").GetProperty("token").GetString();

                await oLocalStore.SetItemAsync("token", token);

                var authState = await AuthStateProvider.GetAuthenticationStateAsync();

                if (authState.User.Identity.IsAuthenticated)
                {
                    NavManager.NavigateTo("/feed");
                }
            }
        }
        catch (Exception)
        {
            throw;
        }
    }
}
