@using Blog.Application.Contexts.PostContext.Entities
@inject NavigationManager NavManager
@inject Blazored.LocalStorage.ILocalStorageService oLocalStore


<div class="top-row ps-3 navbar navbar-dark">
    <div class="container-fluid">
        <a class="navbar-brand" href="feed">Blog</a>
        <button title="Navigation menu" class="navbar-toggler" @onclick="ToggleNavMenu">
            <span class="navbar-toggler-icon"></span>
        </button>
    </div>
</div>

<div class="@NavMenuCssClass nav-scrollable" @onclick="ToggleNavMenu">
    <nav class="flex-column">
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="feed" Match="NavLinkMatch.All">
                <span class="" aria-hidden="true"></span> Feed
            </NavLink>
        </div>
        <div class="nav-item px-3">
            <button type="button" class="btn text-white" data-bs-toggle="modal" data-bs-target="#novoModal">
                Nova Postagem
            </button>
        </div>

    </nav>
</div>

<div class="alert alert-danger" role="alert" style="display: @errorDisplay">
    @errorMessage
</div>


@code {
    private bool collapseNavMenu = true;
    private bool showModal = false;
    private string? NavMenuCssClass => collapseNavMenu ? "collapse" : null;
    private string? modalClass => showModal ? "show" : null;
    private string modalDisplay => showModal ? "block" : "none";
    private string errorMessage = string.Empty;
    private string errorDisplay = "none";


    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }

    private void ShowNewPostModal()
    {
        showModal = true;
    }

    private void CloseModal()
    {
        showModal = false;
    }
}